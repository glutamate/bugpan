module Jan where

alpha tau t = if t<0.0 then 0.0 else (t/tau)*exp (1-t/tau)

expStep etau eamp t = if t>0.0 then (exp((0-t)/etau) - 1)*eamp else 0

tau1m ~ unknown 0.06
tau2m ~ unknown 0.2
tausd ~ unknown 0.01

amp1m ~ unknown 25
amp2m ~ unknown 5
ampsd ~ unknown 0.5

startm ~ unknown 95
startsd ~ unknown 2
starttrsd ~ unknown 0.3

offm ~ unknown 1
offsd ~ unknown 2
offtrsd ~ unknown 0.3

amptrsd ~ unknown 0.5
tautrsd ~ unknown 0.02

noise ~ unknown 0.05

_dt = 0.02
_tmax = 2
inevery t <- session 7 where
  amp1sm ~ N amp1m ampsd
  amp2sm ~ N amp2m ampsd

  tau1sm ~ N tau1m tausd
  tau2sm ~ N tau2m tausd

  startsm ~ N startm startsd
  offsm ~ N offm offsd

  inevery t <- running 7 where
     tau1 ~ N tau1sm tautrsd
     amp1 ~ N amp1sm amptrsd

     tau2 ~ N tau2sm tautrsd
     amp2 ~ N amp2sm amptrsd

     start ~ N startsm starttrsd
     off ~ N offsm offtrsd

     t0 ~ uniform 0.1 0.12

     waveform = {: start - amp1 * alpha tau1 (<:seconds:>-t0) - amp2 * alpha tau2 (<:seconds:>-t0) + expStep tau2 off (<:seconds:>-t0) :} 
     angle! ~ RandomSignal waveform noise

   