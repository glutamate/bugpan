module Intfire where

use Prelude

rate = 100

rin = 2.6e9
vrest = -0.075

cm = 3.1e-12

_dt = 1.0e-4 --4.0e-5
_tmax= 0.1
alpha tau t = if t<0 then 0 else tau*tau*t*(exp (-t*tau)) 

rndSpikeSig <* "uniform 0 1"
rndSpike = eventIf (<: rndSpikeSig :> < rate*dt) 

-- peakSyn = 385 pS = 3.85e-10
-- mean weighted decay 0.6*0.42+0.29*2.71+0.11*15.5 = 2.74 ms
gsyn = {: 7.05e-13 * (alpha 1485 <: seconds:>)  :}

stage gsyn -1

gcell = (convolve gsyn) rndSpike 
cellOde = \v->{: (<: gcell :> - ((v-vrest)/rin))/cm :} 
vm = switch 
	    (solveOde cellOde) vrest
	    spike ~> \_->\_->{: vrest :}
	    refrac_end ~> \tsp->\_-> solveOdeFrom (tsp+dt) cellOde vrest

spike = crosses (-0.049) vm
refrac_end = later 2.0e-3 spike

inputRate = [(0,tmax,rate)]
inputRate *> "store"

gsyn *> "store"
--vm *> "print"
vm *> "store"
spike *> "store"
--spike *> "print"
