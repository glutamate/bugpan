

module BNFC.AbsBugpan where

-- Haskell module generated by the BNF converter




newtype BIdent = BIdent String deriving (Eq,Ord,Show,Read)
data Program =
   Prog BIdent [Declare]
  deriving (Eq,Ord,Show,Read)

data Declare =
   DLet Pat [Arg] Exp
 | DImport BIdent
 | DImportSubst BIdent [ImpSubstLine]
 | DType BIdent Type
 | DSinkConn Exp BIdent Exp
 | DReadSrc BIdent BIdent Exp
 | DStage BIdent Integer
 | DStageNeg BIdent Integer
 | DEvery Pat Exp [Declare]
 | DDist Pat Exp
 | DPragma BIdent Exp
  deriving (Eq,Ord,Show,Read)

data Exp =
   Add Exp Exp
 | Sub Exp Exp
 | Mul Exp Exp
 | Div Exp Exp
 | EIn Exp Exp
 | Negate Exp
 | Natexp Exp
 | Natlog Exp
 | Realpart Exp
 | Imagpart Exp
 | EConst Const
 | And Exp Exp
 | Or Exp Exp
 | Not Exp
 | ECmp Exp CmpOp Exp
 | If Exp Exp Exp
 | Lam Pat Exp
 | App Exp Exp
 | Var BIdent
 | Pair Exp Exp
 | Pair3 Exp Exp Exp
 | Nil
 | Cons Exp Exp
 | ListLit [Exp]
 | Sig Exp
 | SigLimited Exp Exp
 | SigVal Exp
 | SigAt Exp Exp
 | SigDelay Exp Exp
 | SigDeriv Exp
 | SigFby Exp Exp
 | Event Exp
 | ETest Exp Exp
 | EScan Exp Exp
 | Forget Exp Exp
 | Switch Exp [SwitchLine]
 | Box Exp
 | Translate Exp Exp
 | Colour Exp Exp
 | ELet [Declare] Exp
 | ECase Exp [CaseLine]
  deriving (Eq,Ord,Show,Read)

data SwitchLine =
   SwitchLine Exp Exp
  deriving (Eq,Ord,Show,Read)

data CaseLine =
   CaseLine Pat Exp
  deriving (Eq,Ord,Show,Read)

data Arg =
   Arg Pat
  deriving (Eq,Ord,Show,Read)

data ImpSubstLine =
   ImpSubstLine BIdent Exp
  deriving (Eq,Ord,Show,Read)

data Pat =
   PVar BIdent
 | PWild
 | PLit Const
 | PPair Pat Pat
 | PNil
 | PCons Pat Pat
 | PIn Pat Pat
 | PDeriv Pat
 | PRemember Pat
  deriving (Eq,Ord,Show,Read)

data Const =
   CInt Integer
 | CDbl Double
 | CUnit
 | CTrue
 | CFalse
 | CString String
  deriving (Eq,Ord,Show,Read)

data CmpOp =
   Lt
 | Gt
 | Le
 | Ge
 | Eq
 | Ne
  deriving (Eq,Ord,Show,Read)

data Type =
   TUnit
 | TLam Type Type
 | TPair2 Type Type
 | TPair3 Type Type Type
 | TNum
 | TReal
 | TInt
 | TBool
 | TShape
 | TSignal Type
 | TEvent Type
 | TDuration Type
 | TList Type
 | TyVar BIdent
  deriving (Eq,Ord,Show,Read)

