>> eq = nearly 1e-8 
>> everywhere notDisplaced = (eq 0)//displacedAngle
>> everywhere displaced = (not . eq 0)//displacedAngle
>> everywhere longStop = (eq $ -0.17)//zStopDist
>> everywhere shortStop = (eq $ -0.50)//zStopDist
>> everywhere longNotDisplaced = during longStop notDisplaced     
>> everywhere speed lov = (eq $ lov/1000)//approachLoV
>> everywhere nspikes = realcountDuring (approachLoV) spikes
>> everywhere stdDur = (extendDur 1 $ during (speed 40) $ contains spikes $ during longStop notDisplaced)
>> everywhere stdDur20 = (extendDur 1 $ during (speed 20) $ contains spikes $ during longStop notDisplaced)
>> everywhere shist lov =  spikeHistOver (extendDur 1 $ during (speed lov) $ contains spikes $ during longStop notDisplaced) 0.05 spikes
>> everywhere shistMany  = histManyOver (extendDur 1 $ contains spikes $ during longStop notDisplaced) 0.05 spikes
>> everywhere peakrate  = sigStat maxF $ shistMany 
>> lovStr = \lov -> "$\\frac{L}{V}=$" ++show (lov::Double) ++ " ms$^{-1}$"
>> everywhere oneStdDur = take 1 $ drop 1 stdDur
>> aroundHit = fromto 4.5 5.5
>> pos = \x -> if x >0 then x else 0
>> everywhere alphaf t0 tau amp x = pos(-((x-t0)/tau) * amp * exp(1 + (x-t0)/tau))
>> everywhere fitfalpha2 [t0, tau1, amp1, tau2, amp2] x = alphaf t0 tau1 amp1 x + alphaf t0 tau2 amp2 x
>> everywhere fitfalpha1 [t0, tau1, amp1] x = alphaf t0 tau1 amp1 x 
>> everywhere fitf1 [t0, amp, t1, t2, t3, pslow, bl] t = let x = -(t-t0) in pos(amp*(1-exp(-x/t1))*((1-pslow)*exp(-x/t2)+pslow*exp(-x/t3)))+bl

>> everywhere rateSig pars = fillSig 0 6 0.0005 $ fitf1 pars

>> fitinit = uniform 0.1 1 >>= \t1 -> return [5, 100, t1, 0.5, 2, 0.1, 0.1]
>> fitinitalpha1 = return [5, 0.13, 186] :: Sampler [Double]
>> fitinitalpha2 = return [5, 0.13, 186, 1, 50]  :: Sampler [Double]

