%> importHs Math.Probably.FoldingStats

>> everywhere eq = nearly 1e-8 
>> everywhere notDisplaced = (eq 0)//displacedAngle
>> everywhere displaced = (not . eq 0)//displacedAngle
>> everywhere longStop = (eq $ -0.17)//zStopDist
>> everywhere shortStop = (eq $ -0.50)//zStopDist
>> everywhere longNotDisplaced = during longStop notDisplaced     
>> everywhere speed lov = (eq $ lov/1000)//approachLoV
>> everywhere nspikes = realcountDuring (approachLoV) spikes
>> everywhere stdDur = (extendDur 1 $ during (speed 40) $ during longStop notDisplaced)
>> everywhere shist lov = spikeHistOver (extendDur 1 $ during (speed lov) $ during longStop notDisplaced) 0.05 spikes
>> everywhere peakrate lov = sigStat maxF $ shist lov

%> inSessionsWhere zStopDist  & spikes & notDisplaced
> openSession 0eb8
 
> plot $ ((("voltage", take 1 $ during stdDur normV) :+: 
>         ("spikes", tag 16 $ during (take 1 stdDur) spikes) :+:
>         ("threshold", take 1 $ during stdDur spikeThreshold)) :||:
>        (("L/V=40", shist 40) :+: ("L/V=20", shist 20) :+: ("L/V=10", shist 10))) :==:
>        ((scatter $ zipD (during longNotDisplaced approachLoV) nspikes) :||: 
>         (scatter $ zipD (during longNotDisplaced approachLoV) nspikes))