module DisplacedLoom where

use Prelude

lov = 4.0000e-2
l = 0.2980
v = l/(lov*2)
angle = 0.01
stopDist = -0.5


travel_dist = v*5
start_dist = travel_dist*(cos angle) 
displacement = travel_dist*(sin angle)

xpos = {: <:seconds:>*displacement/5 :}
zpos = {: (<:seconds:>-5)*start_dist/5 :}

hitScreen = crosses stopDist zpos

pos = switch
          {: (<:xpos:>, 0, <:zpos:>) :}
          hitScreen ~> \ts->\_-> {: (ts*displacement/5, 0, stopDist) :}


loomObj = {: colour black (translate <:pos:> (cube l)) :}
loomObj *> screen ""

collision = [(5,())]

hitScreen *> store ""

zStopDist = [(0, 5, stopDist)]
zStopDist *> store ""

displacedAngle = [(0, 5, angle)]
approachLoV = [(0,5,lov)]
collision *> store ""
displacedAngle *> store ""
approachLoV *> store ""

_tmax=6


--_dt=0.5
--pos *> "print"

--ecVoltage <* adc (0,20000,6) 

--ecVoltage *> store ""
