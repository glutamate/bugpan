%hello!

>> everywhere eq = nearly 1e-8 
>> everywhere notDisplaced = (eq 0)//displacedAngle
>> everywhere displaced = (not . eq 0)//displacedAngle
>> everywhere longStop = (eq $ -0.17)//zStopDist
>> everywhere shortStop = (eq $ -0.50)//zStopDist
>> everywhere speed lov = (eq $ lov/1000)//approachLoV

%> table where zStopDist & spikes & (eq 0)//displacedAngle
%>   tagValues zStopDist
%>   length spikes
%>   length notDisplaced
%>   tagValues approachLoV

> inSessionsWhere zStopDist  & spikes & notDisplaced

>> shist10 = spikeHistOver (extendDur 1 $ during (speed 10) $ during longStop notDisplaced) 0.02 spikes
>> shist40 = spikeHistOver (extendDur 1 $ during (speed 40) $ during longStop notDisplaced) 0.02 spikes

> plot $ ("long10", spikeHistOver (extendDur 1 $ during (speed 10) $ during longStop notDisplaced) 0.02 spikes) :+:
>        ("short10", spikeHistOver (extendDur 1 $ during (speed 10) $ during shortStop notDisplaced) 0.02 spikes)

%> plot $ ("long20", spikeHistOver (extendDur 1 $ during (speed 20) $ during longStop notDisplaced) 0.02 spikes) :+:
%>        ("short20", spikeHistOver (extendDur 1 $ during (speed 20) $ during shortStop notDisplaced) 0.02 spikes)

> plot $ ("long40", spikeHistOver (extendDur 1 $ during (speed 40) $ during longStop notDisplaced) 0.02 spikes) :+:
>        ("short40", spikeHistOver (extendDur 1 $ during (speed 40) $ during shortStop notDisplaced) 0.02 spikes)

%> plot $ ("long40", spikeHistOver (extendDur 1 $ during (speed 40) $ during longStop notDisplaced) 0.02 spikes) :+:
%>        ("long20", spikeHistOver (extendDur 1 $ during (speed 20) $ during longStop notDisplaced) 0.02 spikes) :+:
%>        ("long10", spikeHistOver (extendDur 1 $ during (speed 10) $ during longStop notDisplaced) 0.02 spikes)

> Fit "pos(-((x-t0)/tau) * A * exp(1 + (x-t0)/tau))" [("t0",5),("A",100),("tau", 1)] $ head shist10
%> Fit "pos(A*(exp((x-t0)/tau1)-exp((x-t0)/tau2))/(tau1-tau2))" [("t0",5),("A",100),("tau1", 1),("tau2", 2)] $ head shist10
% MaxG * ( exp(-t/tau1) - exp(-t/tau2) ) / ( tau1 - tau2 )

> avhist10 := averageSig $$ shist10
>   where zStopHist & spikes & notDisplaced



> break
> close 

goodbye!

